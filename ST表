#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstring>
#include <map>
#include <stack>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <sstream>
#include <list>
#include <unordered_map>
using namespace std;
typedef long long ll;

int n, m;
vector<vector<int> > dp;
vector<int> a;

int query(int l, int r) {
	int j = (int)log2(r - l + 1);
	return max(dp[l][j], dp[r - (1 << j) + 1][j]);
}

int main() {
	scanf("%d%d", &n, &m);
	dp = vector<vector<int> >(n, vector<int>((int)log2(n), 0));
	a = vector<int>(n, 0);
	for (int i = 0; i < n; i++)scanf("%d", &a[i]);
	for (int i = 0; i < n; i++)dp[i][0] = a[i];
	for (int j = 1; j <= log2(n); j++) {
		for (int i = 0; i + (1 << j) - 1 < n; i++) {
			dp[i][j] = max(dp[i][j - 1], dp[i + (1 << (j - 1))][j - 1]);
		}
	}
	int l, r;
	while (scanf("%d%d", &l, &r) != EOF) {
		l--; r--;
		printf("%d\n", query(l, r));
	}
}
